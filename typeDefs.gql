type Product {
  _id: ID
  title: String!
  imageUrl: String!
  description: String!
  categories: [String]!
  createdDate: String
  likes: Int
  createdBy: User
  messages: [Message]
}

type User {
  _id: ID
  username: String! @unique
  password: String!
  email: String!
  joinDate: String
  avatar: String
  favorites: [Product]
}

type Message {
  _id: ID
  messageBody: String!
  messageUser: User!
  messageDate: String
}

type Token {
  token: String!
}

type ProductsPage {
  products: [Product]
  hasMore: Boolean!
}

type LikesFaves {
  likes: Int
  favorites: [Product]
}

type Query {
  getCurrentUser: User
  getProduct(_id: String!): Product!
  getProducts(size: Int): [Product]!
  getUserProducts(userId: String!): [Product]
  searchProducts(searchTerm: String): [Product]
  productsPage(page: Int!, size: Int!): ProductsPage
}

type Mutation {
  addProduct(
    title: String!
    imageUrl: String!
    description: String!
    categories: [String]!
    creatorId: String!
  ): Product!
  addProductMessage(
    messageBody: String!
    userId: String!
    productId: String!
  ): Product!

  updateUserProduct(
    productId: String!
    userId: String!
    title: String!
    imageUrl: String!
    categories: [String]!
    description: String!
  ): Product!

  likeProduct(_id: ID, username: String): LikesFaves
  unlikeProduct(_id: ID, username: String): LikesFaves

  signinUser(username: String!, password: String!): Token
  signupUser(username: String!, email: String!, password: String!): Token
}
